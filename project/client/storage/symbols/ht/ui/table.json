{
  "modified": "Tue Aug 20 2019 16:28:22 GMT+0800 (中国标准时间)",
  "dataBindings": [
    {
      "attr": "ht.columns",
      "valueType": "Object",
      "name": "TableColumnDef"
    },
    {
      "attr": "ht.dataSource",
      "valueType": "Object",
      "name": "TableDataSource"
    },
    {
      "attr": "ht.headbackground",
      "valueType": "Color",
      "name": "TableHeadBackground"
    },
    {
      "attr": "ht.bodyBackground",
      "valueType": "Color",
      "name": "TableBodyBackground"
    },
    {
      "attr": "ht.borderWidth",
      "valueType": "PositiveNumber",
      "name": "TableBorderWidth"
    },
    {
      "attr": "ht.borderColor",
      "valueType": "Color",
      "name": "TableBorderColor"
    },
    {
      "attr": "ht.columnLineColor",
      "valueType": "Color",
      "name": "TableColumnLineColor"
    },
    {
      "attr": "ht.columnLineWidth",
      "valueType": "PositiveNumber",
      "name": "TableColumnLineWidth"
    },
    {
      "attr": "ht.rowLineColor",
      "valueType": "Color",
      "name": "TableRowLineColor"
    },
    {
      "attr": "ht.rowLineWidth",
      "valueType": "PositiveNumber",
      "name": "TableRowLineWidth"
    },
    {
      "attr": "ht.headHeight",
      "valueType": "PositiveNumber",
      "name": "TableHeadHeight"
    },
    {
      "attr": "ht.rowHeight",
      "valueType": "PositiveNumber",
      "name": "TableBodyHeight"
    },
    {
      "attr": "ht.headTextColor",
      "valueType": "Color",
      "name": "TableHeadColor"
    },
    {
      "attr": "ht.bodyTextColor",
      "valueType": "Color",
      "name": "TableBodyColor"
    },
    {
      "attr": "ht.cellPadding",
      "valueType": "PositiveNumber",
      "name": "TableCellPadding"
    },
    {
      "attr": "ht.headFont",
      "valueType": "Font",
      "name": "TableHeadFontFamily"
    },
    {
      "attr": "ht.bodyFont",
      "valueType": "Font",
      "name": "TableBodyFontFamily"
    },
    {
      "attr": "ht.showHead",
      "valueType": "Boolean",
      "name": "TableShowHead"
    },
    {
      "attr": "ht.translateX",
      "valueType": "Number",
      "name": "TableTranslateX"
    },
    {
      "attr": "ht.translateY",
      "valueType": "Number",
      "name": "TableTranslateY"
    },
    {
      "attr": "ht.hoverBackground",
      "valueType": "Color",
      "name": "TableHoverBackground"
    },
    {
      "attr": "ht.drawRow",
      "valueType": "Function",
      "name": "TableDrawRow"
    },
    {
      "attr": "ht.scrollBarWidth",
      "valueType": "PositiveNumber",
      "name": "TableScrollBarWidth"
    },
    {
      "attr": "ht.scrollBarColor",
      "valueType": "Color",
      "name": "TableScrollBarColor"
    },
    {
      "attr": "ht.autoHideScrollBar",
      "valueType": "Boolean",
      "name": "UIAutoHideScrollBar"
    },
    {
      "attr": "ht.scrollable",
      "valueType": "Boolean",
      "name": "UIScrollable"
    }
  ],
  "snapshotURL": "symbols/ht/snapshot/table.json",
  "width": 420,
  "height": 300,
  "fitSize": true,
  "scrollable": true,
  "interactive": true,
  "clip": true,
  "attachStyle": "close",
  "comps": [
    {
      "type": "components/ht/ui/table.json",
      "displayName": "table",
      "rect": [
        0,
        0,
        420,
        300
      ],
      "onDown": "__ht__function(event, data, view, point, width, height) {\nht.vector.tableInteractor.onDown.apply(ht.vector.tableInteractor, arguments);\n}",
      "onMove": "__ht__function(event, data, view, point, width, height) {\nht.vector.tableInteractor.onMove.apply(ht.vector.tableInteractor, arguments);\n}",
      "onLeave": "__ht__function(event, data, view, point, width, height) {\nht.vector.tableInteractor.onLeave.apply(ht.vector.tableInteractor, arguments);\n}",
      "onBeginDrag": "__ht__function(event, data, view, point, width, height) {\nht.vector.tableInteractor.onBeginDrag.apply(ht.vector.tableInteractor, arguments);\n}",
      "onDrag": "__ht__function(event, data, view, point, width, height) {\nht.vector.tableInteractor.onDrag.apply(ht.vector.tableInteractor, arguments);\n}",
      "onEndDrag": "__ht__function(event, data, view, point, width, height) {\nht.vector.tableInteractor.onEndDrag.apply(ht.vector.tableInteractor, arguments);\n}",
      "onScroll": "__ht__function(event, data, view, point, width, height) {\nht.vector.tableInteractor.onScroll.apply(ht.vector.tableInteractor, arguments);\nevent.stopPropagation();\n}",
      "columns": {
        "func": "attr@ht.columns",
        "value": []
      },
      "dataSource": {
        "func": "attr@ht.dataSource",
        "value": []
      },
      "thBackground": {
        "func": "attr@ht.headbackground",
        "value": "rgba(3,0,163,0.30)"
      },
      "tdBackground": {
        "func": "attr@ht.bodyBackground"
      },
      "borderWidth": {
        "func": "attr@ht.borderWidth",
        "value": 1
      },
      "borderColor": {
        "func": "attr@ht.borderColor",
        "value": "rgb(212,212,212)"
      },
      "columnLineColor": {
        "func": "attr@ht.columnLineColor",
        "value": "rgb(212,212,212)"
      },
      "columnLineWidth": {
        "func": "attr@ht.columnLineWidth",
        "value": 1
      },
      "rowLineColor": {
        "func": "attr@ht.rowLineColor",
        "value": "rgb(212,212,212)"
      },
      "rowLineWidth": {
        "func": "attr@ht.rowLineWidth",
        "value": 1
      },
      "thHeight": {
        "func": "attr@ht.headHeight",
        "value": 24
      },
      "tdHeight": {
        "func": "attr@ht.rowHeight",
        "value": 24
      },
      "textLineHeight": 12,
      "thColor": {
        "func": "attr@ht.headTextColor",
        "value": "rgb(33,33,33)"
      },
      "tdColor": {
        "func": "attr@ht.bodyTextColor",
        "value": "rgb(33,33,33)"
      },
      "cellPadding": {
        "func": "attr@ht.cellPadding",
        "value": 0
      },
      "thFont": {
        "func": "attr@ht.headFont",
        "value": "12px sans-serif, arial"
      },
      "tdFont": {
        "func": "attr@ht.bodyFont",
        "value": "12px sans-serif, arial"
      },
      "showHead": {
        "func": "attr@ht.showHead",
        "value": true
      },
      "translateX": {
        "func": "attr@ht.translateX",
        "value": 0
      },
      "translateY": {
        "func": "attr@ht.translateY",
        "value": 0
      },
      "hoverBackground": {
        "func": "attr@ht.hoverBackground",
        "value": "rgba(255,255,255,0.30)"
      },
      "scrollable": {
        "func": "attr@ht.scrollable",
        "value": true
      },
      "autoHideScrollBar": {
        "func": "attr@ht.autoHideScrollBar",
        "value": false
      },
      "scrollBarColor": {
        "func": "attr@ht.scrollBarColor",
        "value": "rgb(51,153,255)"
      },
      "scrollBarWidth": {
        "func": "attr@ht.scrollBarWidth",
        "value": 8
      },
      "scrollBarWidthAbsolute": true,
      "drawRow": {
        "func": "attr@ht.drawRow"
      }
    }
  ]
}